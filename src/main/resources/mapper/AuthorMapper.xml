<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shiki.zongyue.mapper.AuthorMapper">
  <resultMap id="BaseResultMap" type="com.shiki.zongyue.pojo.Author">
    <id column="author_id" jdbcType="INTEGER" property="author_id" />
    <result column="author_login_name" jdbcType="VARCHAR" property="author_login_name" />
    <result column="author_password" jdbcType="VARCHAR" property="author_password" />
    <result column="author_name" jdbcType="VARCHAR" property="author_name" />
    <result column="author_image" jdbcType="VARCHAR" property="author_image" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="author_information" jdbcType="VARCHAR" property="author_information" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    author_id, author_login_name, author_password, author_name, author_image, salt, author_information
  </sql>
  <select id="selectByExample" parameterType="com.shiki.zongyue.pojo.AuthorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from author
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from author
    where author_id = #{author_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from author
    where author_id = #{author_id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="author_id" keyProperty="author_id" parameterType="com.shiki.zongyue.pojo.Author" useGeneratedKeys="true">
    insert into author (author_login_name, author_password, 
      author_name, author_image, salt, 
      author_information)
    values (#{author_login_name,jdbcType=VARCHAR}, #{author_password,jdbcType=VARCHAR}, 
      #{author_name,jdbcType=VARCHAR}, #{author_image,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, 
      #{author_information,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="author_id" keyProperty="author_id" parameterType="com.shiki.zongyue.pojo.Author" useGeneratedKeys="true">
    insert into author
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="author_login_name != null">
        author_login_name,
      </if>
      <if test="author_password != null">
        author_password,
      </if>
      <if test="author_name != null">
        author_name,
      </if>
      <if test="author_image != null">
        author_image,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="author_information != null">
        author_information,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="author_login_name != null">
        #{author_login_name,jdbcType=VARCHAR},
      </if>
      <if test="author_password != null">
        #{author_password,jdbcType=VARCHAR},
      </if>
      <if test="author_name != null">
        #{author_name,jdbcType=VARCHAR},
      </if>
      <if test="author_image != null">
        #{author_image,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="author_information != null">
        #{author_information,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shiki.zongyue.pojo.Author">
    update author
    <set>
      <if test="author_login_name != null">
        author_login_name = #{author_login_name,jdbcType=VARCHAR},
      </if>
      <if test="author_password != null">
        author_password = #{author_password,jdbcType=VARCHAR},
      </if>
      <if test="author_name != null">
        author_name = #{author_name,jdbcType=VARCHAR},
      </if>
      <if test="author_image != null">
        author_image = #{author_image,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="author_information != null">
        author_information = #{author_information,jdbcType=VARCHAR},
      </if>
    </set>
    where author_id = #{author_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shiki.zongyue.pojo.Author">
    update author
    set author_login_name = #{author_login_name,jdbcType=VARCHAR},
      author_password = #{author_password,jdbcType=VARCHAR},
      author_name = #{author_name,jdbcType=VARCHAR},
      author_image = #{author_image,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      author_information = #{author_information,jdbcType=VARCHAR}
    where author_id = #{author_id,jdbcType=INTEGER}
  </update>
</mapper>